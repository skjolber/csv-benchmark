
plugins {
    id 'me.champeau.jmh' version "0.7.3" apply false
    id 'com.github.ben-manes.versions' version '0.52.0' apply false
    id 'io.morethan.jmhreport' version '0.9.6' apply false
}

ext {
    sesselTjonnaVersion = '1.0.25'
    simpleFlatMapperVersion = '9.0.2'
    univocityVersion = '2.9.1'
}

def benchmarkProjects() {
    subprojects.findAll { it.name.endsWith("-benchmark")  }
}

subprojects {
    apply plugin: 'java'
    apply plugin: 'com.github.ben-manes.versions'

    sourceCompatibility = 21
    targetCompatibility = 21
    
    repositories {
        mavenLocal()
        mavenCentral()
    }

}


configure(benchmarkProjects()) {
    apply plugin: 'io.morethan.jmhreport'
    apply plugin: 'me.champeau.jmh'

    // fix obscure error
    task copyWoff2(type: Copy) {
        from 'src/jmh/resources/448c34a56d699c29117adc64c43affeb.woff2'
        into 'build/reports/jmh'
    }

    jmh {
        resultFormat = 'JSON'
        
        forceGC = true
        
        fork = 1
        
        jvmArgs = ['-XX:+UseG1GC'] //, '-Xverify:none']

        duplicateClassesStrategy = 'warn'
    }

    jmhReport {
        jmhResultPath = project.file("build/results/jmh/results.json")
        jmhReportOutput = project.file("build/reports/jmh")

    }
    
    tasks.jmh.finalizedBy tasks.jmhReport
    tasks.jmhReport.dependsOn(tasks.getByName("copyWoff2"))
    configurations.all {
        // Check for updates every build
        resolutionStrategy.cacheChangingModulesFor 0, 'seconds'
    }    
}

allprojects {
    apply plugin: 'eclipse'
    apply plugin: 'idea'

    eclipse {
        classpath {
            downloadSources = true
            downloadJavadoc = true
        }
    }

    // Tell idea to output to build/classes/main instead of /out/
    idea {
        module {
            outputDir file('build/classes/main')
            testOutputDir file('build/classes/test')
        }
    }

    repositories {
        mavenCentral()
        gradlePluginPortal()
    }
}
